---

- name: Setup DNS server
  hosts: dns
  vars:
    dns_config_file: /etc/dnsmasq.hosts

  tasks:
  - name: Include host mapping vars
    ansible.builtin.include_vars:
      file: host_ip_mapping_subdomain1.yml
      name: subdomain1
  
  - name: Include host mapping vars2
    ansible.builtin.include_vars:
      file: shortnames.yml
      name: shortnames

  - name: Create config file if needed
    become: true
    copy:
      content: ""
      dest: "{{ dns_config_file }}"
      force: no
      group: root
      owner: root
      mode: 0644

  - name: "Set dnsmasq to use hosts file"
    become: true
    ansible.builtin.lineinfile:
      path: "/etc/dnsmasq.conf"
      line: "addn-hosts={{ dns_config_file }}"
    notify:
    - Restart dnsmasq
 
  - name: "Set DNS hosts for {{ shortnames.dns_subdomain }}"
    become: true
    ansible.builtin.lineinfile:
      path: "{{ dns_config_file }}"
      line: "{{ item.ip }} {{ item.host }}{{ shortnames.dns_subdomain }}"
    loop: "{{ shortnames.host_ip_mapping }}"
    notify:
    - Restart dnsmasq
  
  - name: "Set DNS hosts for {{ subdomain1.dns_subdomain }}"
    become: true
    ansible.builtin.lineinfile:
      path: "{{ dns_config_file }}"
      line: "{{ item.ip }} {{ item.host }}{{ subdomain1.dns_subdomain }}"
    loop: "{{ subdomain1.host_ip_mapping }}"
    notify:
    - Restart dnsmasq
  
  - name: Sort dns file by ip
    ansible.builtin.shell: "cp -f {{ dns_config_file }} {{ dns_config_file }}.bak; cat {{ dns_config_file }}.bak | sort | uniq > {{ dns_config_file }}"
    become: true

  handlers:
  - name: Restart dnsmasq
    ansible.builtin.systemd:
      state: restarted
      name: dnsmasq
    become: true
