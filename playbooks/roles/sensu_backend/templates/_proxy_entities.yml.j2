{% for proxy in proxy_entities %}
type: Entity
api_version: core/v2
metadata:
  name: {{ proxy.name }}
  annotations:
  {% if 'emails_to_alert' in proxy %}
    emails_to_alert: {{ proxy.emails_to_alert }}
  {% endif%}

  labels:
    proxy_type: {{ proxy.type | default("website") }}
{% if 'url' in proxy %}
    url: {{ proxy.url }}
{% endif %}
{% if 'ntfy_channels' in proxy %}
    ntfy_channels: {{ proxy.ntfy_channels }}
{% endif %}
{% if 'domain' in proxy %}
    domain: {{ proxy.domain }}
{% endif %}
    sensu.io/workflow: sensu-flow

spec:
  entity_class: proxy
---
{% endfor %}
{% for stream in sensu_backend__stream_checks %}
type: Entity
api_version: core/v2
metadata:
  name: {{ stream.name }}-stream
  labels:
    proxy_type: stream
    sensu.io/workflow: sensu-flow
{% if 'ntfy_channels' in stream %}
    ntfy_channels: {{ stream.ntfy_channels }}
{% endif %}
    stream_name: {{ stream.name }}
    stream_source: {{ stream.stream_source }}
spec:
  entity_class: proxy
---
type: CheckConfig
api_version: core/v2
metadata:
  name: check-stream-{{ stream.name }}
  namespace: default
  labels:
    sensu.io/managed_by: sensuctl
    sensu.io/workflow: sensu-flow
  annotations:
    fatigue_check/occurrences: '1' # immediately
    fatigue_check/interval: '1' # every time
    fatigue_check/allow_resolution: 'false' # only failures
    ntfy/title: 'Trouble getting the stream live?'
    ntfy/template: 'check_output'
spec:
  check_hooks: null
  command: '/opt/sensu_scripts/bin/check-stream.sh {% raw %}--stream-source {{ .labels.stream_source }} --api-key ${YOUTUBE_API_KEY}{% endraw %}'
  env_vars:
    - YOUTUBE_API_KEY={{ sensu_backend__youtube_api_key }}
  handlers:
    - ntfy
    - email
    - influxdb
  high_flap_threshold: 0
  cron: '{{ stream.cron }}'
  low_flap_threshold: 0
  output_metric_format: influxdb_line
  output_metric_handlers:
    - influxdb
  pipelines: []
  publish: true
  runtime_assets: []
  secrets: null
  stdin: false
  subdue: null
  timeout: 0
  ttl: 0
  max_output_size: 0
  discard_output: false
  proxy_entity_name: ''
  proxy_requests:
    entity_attributes:
      - entity.entity_class == 'proxy'
      - entity.labels.proxy_type == 'stream'
      - entity.labels.stream_name == '{{ stream.name }}'
    splay: false
    splay_coverage: 0
  subscriptions:
    - run_proxies
{% if not loop.last %}

---

{% endif %}
{% endfor %}
