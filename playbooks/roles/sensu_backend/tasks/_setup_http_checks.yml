
- name: Setup sensu-flow user
  ansible.builtin.include_tasks: _run_in_backend_container.yml
  vars:
    label: '{{ item.label }}'
    command: '{{ item.command }}'
  with_items:
    - label: Configure sensuctl
      command: >
        sensuctl configure -n --url http://localhost:8080
        --password '{{ sensu_backend__admin_password }}'
        --username {{ sensu_backend__admin_username }}
    - label: Create cluster role
      command: >
        sensuctl cluster-role create sensu-flow
        --resource namespaces,roles,rolebindings,assets,handlers,checks,hooks,filters,mutators,secrets,entities
        --verb get,list,create,update,delete
    - label: Create role binding
      command: >
        sensuctl cluster-role-binding create sensu-flow
        --cluster-role sensu-flow
        --group sensu-flow
    - label: Create sensu-flow user
      command: >
        sensuctl user create sensu-flow
          --password '{{ sensu_backend__sensu_flow_password }}'
          --groups sensu-flow

- name: Ensure variables in env file
  notify: Restart service
  become: true
  ansible.builtin.blockinfile:
    # NOTE: admin credentials do NOT have role defaults and must be set as host or group var.
    block: |
      SENSU_API_URL=http://localhost:8080
      SENSU_USER='sensu-flow'
      SENSU_PASSWORD='{{ sensu_backend__sensu_flow_password }}'
      NAMESPACES_DIR=/tmp/ansible_http_checks/sensu_config/namespaces
      NAMESPACES_FILE=/tmp/ansible_http_checks/sensu_config/namespaces.yaml
      VERBOSE=1
    path: '{{ sensu_backend__service_dir }}/sensu_config/.env'
    create: true
    owner: '{{ sensu_backend__service_user }}'
    group: '{{ sensu_backend__service_user }}'
    mode: '0660'

- name: Copy in config files
  block:
    # NOTE: choosing to do a zip and copy over the zip to extract as I understand this to be much quicker then a file glob.
    - name: Zip up config files on localhost
      delegate_to: localhost
      community.general.archive:
        dest: /tmp/ansible_http_checks.tar.gz
        path: '{{ role_path }}/files/'
        owner: '{{ ansible_user_id }}'
        group: '{{ ansible_user_id }}'
        mode: '0664'
    - name: Copy into container shared folder
      become: true
      ansible.builtin.copy:
        src: /tmp/ansible_http_checks.tar.gz
        dest: '{{ sensu_backend__service_dir }}/sensu_config/ansible_http_checks.tar.gz'
        owner: '{{ sensu_backend__service_user }}'
        group: '{{ sensu_backend__service_user }}'
        mode: '0664'
    - name: Render checks file
      become: true
      ansible.builtin.template:
        dest: '{{ sensu_backend__service_dir }}/sensu_config/_proxy_entities.yml'
        src: _proxy_entities.yml.j2
        owner: '{{ sensu_backend__service_user }}'
        group: '{{ sensu_backend__service_user }}'
        mode: '0664'
      vars:
        proxy_entities: '{{ sensu_backend__proxy_entities }}'
    - name: Render handlers file
      become: true
      ansible.builtin.template:
        dest: '{{ sensu_backend__service_dir }}/sensu_config/influxdb.yml'
        src: handlers/influxdb.yml.j2
        owner: '{{ sensu_backend__service_user }}'
        group: '{{ sensu_backend__service_user }}'
        mode: '0664'
    - name: Extract in container
      ansible.builtin.include_tasks: _run_in_backend_container.yml
      vars:
        label: '{{ item.label }}'
        command: '{{ item.command }}'
      with_items:
        - label: Ensure dest is gone
          command: >
            rm -rf /tmp/ansible_http_checks
        - label: Ensure folder exists
          command: >
            mkdir -p /tmp/ansible_http_checks
        - label: Extract into folder
          command: >
            tar -xzf /var/lib/sensu/ansible_http_checks.tar.gz -C /tmp/ansible_http_checks
        - label: Make script executable
          command: chmod +x /tmp/ansible_http_checks/sensuflow.sh
        - label: Copy proxy entities file into config dir
          command: cp -f /var/lib/sensu/_proxy_entities.yml /tmp/ansible_http_checks/sensu_config/namespaces/default/entities/proxy.yml
        - label: Copy influx handler file into config dir
          command: cp -f /var/lib/sensu/influxdb.yml /tmp/ansible_http_checks/sensu_config/namespaces/default/handlers/influxdb.yml
    - name: Run config
      ansible.builtin.include_tasks: _run_in_backend_container.yml
      vars:
        label: '{{ item.label }}'
        command: '{{ item.command }}'
        inner_working_dir: "{{ item.working_dir | default('/') }}"
      with_items:
        - label: Run script
          command: /tmp/ansible_http_checks/sensuflow.sh
          working_dir: /var/lib/sensu
        - label: Configure sensuctl
          command: >
            sensuctl configure -n --url http://localhost:8080
            --password '{{ sensu_backend__admin_password }}'
            --username {{ sensu_backend__admin_username }}
