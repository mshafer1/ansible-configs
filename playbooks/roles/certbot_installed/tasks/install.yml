# based on https://www.digitalocean.com/community/tutorials/how-to-protect-an-nginx-server-with-fail2ban-on-ubuntu-14-04
- name: Install system requirements
  ansible.builtin.apt:
    pkg: 
    - python3
    - python3-pip
    - python3-venv
    - cron # make sure crontab is available
    state: latest
    update_cache: true
    cache_valid_time: "{{ (12*60*60)|int }}" # 12 hr * 60 min/hr * 60 sec/min
  become: true

- name:  Ensure pipx is installed
  become: true
  block:
    - name: apt install pipx
      ansible.builtin.apt: # hmmmm., available for ubuntu but not debian...
        pkg: 
        - pipx
        state: present
        update_cache: true
        cache_valid_time: "{{ (12*60*60)|int }}" # 12 hr * 60 min/hr * 60 sec/min
      when: ansible_distribution == 'Ubuntu' and not cerbot_installed__force_pip_install_pipx
    - name: Pip install pipx
      ansible.builtin.pip:
        name:
          - pipx
      when: ansible_distribution != 'Ubuntu' or cerbot_installed__force_pip_install_pipx
      environment:
        PIP_BREAK_SYSTEM_PACKAGES: 1
    - name: Add pipx paths to PATH
      ansible.builtin.copy:
        content: |
          export PATH=/root/.local/bin:$PATH
        dest: /etc/profile.d/00-pipx-path.sh


- name: Install certbot
  become: true
  block:
    - name: Install Core Certbot
      community.general.pipx:
        name: certbot
    - name: Install Certbot-Nginx
      community.general.pipx:
        name: certbot
        state: inject
        inject_packages:
          - certbot-nginx

- name: Register certbot
  block:
    - name: 'Certbot: create dir if needed'
      become: true
      ansible.builtin.file:
        path: /etc/letsencrypt
        state: directory
        mode: '0700'
        force: true
    - name: Register
      become: true
      when: cerbot_email is defined
      ansible.builtin.shell: |
        certbot -n register --agree-tos --email {{ certbot_email }}
        touch /etc/letsencrypt/.registered
      args:
        creates: /etc/letsencrypt/.registered

- name: Setup cronjob for renewal
  become: true
  ansible.builtin.cron:
    name: certbot-renewal
    job: "/bin/bash -lc '/usr/local/bin/certbot renew >> /var/log/certbot'"
    minute: "0"
    hour: "6"
    day: "*"
    dow: 5

- name: Setup ACME DNS hook
  become: true
  ansible.builtin.copy:
    src: files/acme-dns-auth.py
    dest: /etc/letsencrypt/acme-dns-auth.py
    mode: '700'
    owner: root
    group: root
